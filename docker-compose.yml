version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - jurl-network

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    # Notice we're only exposing to the internal network now
    expose:
      - "5000"
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/jurl
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=jurl
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=change_this_to_a_secure_string_in_production
      - JWT_EXPIRATION=1d
      - ADMIN_PASSWORD_HASH=$$2a$$10$$XOPbrlUPQdwdJUpSrIF6X.LbE14qsMmKGhM1A8W9iqaG3vv1c7b42
      # Removed BASE_URL since we now use request headers
      - URL_CODE_LENGTH=6
    networks:
      - jurl-network

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jurl
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - jurl-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - jurl-network

networks:
  jurl-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: